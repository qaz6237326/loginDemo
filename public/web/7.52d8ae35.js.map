{"version":3,"sources":["webpack:///./modules/rejudge_v3/viewResult/index.js","webpack:///./layouts/PanelLayout.js","webpack:///./modules/rejudge_v3/viewResult/components/Table.js","webpack:///./modules/rejudge_v3/viewResult/components/App.js"],"names":["_interopRequireDefault","__webpack_require__","App","_react","_classnames","_ref","children","option","title","foot","tip","className","collapse","rest","_objectWithoutProperties","default","createElement","_extends","_reactRedux","_bere","_moment","_rejudge","MODEL","rejudgeCfg","table","columns","operationAreaKey","statusList","orderStatusKey","viewResult_task_type","viewResult_status","Table","_this2","_classCallCheck","this","_defineProperty","_assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","call","val","console","log","perPageCount","state","props","dispatch","type","current","callback","res","setState","data","total","num_results","_this2$state","result","key","newOrder","sortOrder","reverse","value","record","href","statis_package_url","target","img_package_url","filterProvince","pageList","perPageCountList","React","Component","_this$state","DataTable","onSort","handleSort","Pager","onPageChange","handlePageChange","onPerPageChange","handlePerPageChange","getViewEndTableData","_this3","map","column","index","_objectSpread","render","renderOperationArea","task_type","status","create_time","startOf","format","modify_time","connect","rejudge3","_PanelLayout","_Table","_this","navSelect","Fragment","onClick","window","history","back","rejudge_v3"],"mappings":"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","file":"7.52d8ae35.js","sourcesContent":["import App from './components/App'\r\nexport default App\r\n","import React from 'react'\r\nimport classnames from 'classnames'\r\n\r\nconst PanelLayout = ({ children, option, title, foot, tip, className, collapse, ...rest }) => <div className={classnames('tc-panel', className)} {...rest}>\r\n  {\r\n    (title || option) && <div className=\"tc-panel-hd\">\r\n      <div className=\"col\">\r\n        <h3 className=\"title\">{title} { tip && <em>{tip}</em> }</h3>\r\n      </div>\r\n      <div className=\"col\">{option}</div>\r\n    </div>\r\n  }\r\n  <div className=\"tc-panel-bd\">{children}</div>\r\n  { foot && <div className=\"tc-panel-ft\">{foot}</div> }\r\n  { collapse && <div className=\"tc-panel-collapse\">{collapse}</div>}\r\n</div>\r\n\r\nexport default PanelLayout\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\nimport {Button, Checkbox, DataTable, DateRangePicker, Dialog, Pager, TopTips} from '@tencent/bere'\r\nimport moment from 'moment'\r\nimport rejudgeCfg from '@config/rejudge'\r\n\r\nconst MODEL = rejudgeCfg.MODEL;\r\n\r\n\r\nconst {\r\n  columns, statusList, orderStatusKey, operationAreaKey, viewResult_task_type, viewResult_status\r\n} = rejudgeCfg.table\r\n\r\nclass Table extends React.Component {\r\n  render() {\r\n\r\n    const { current, total, perPageCount,perPageCountList } = this.state\r\n    return (\r\n      <div>\r\n\r\n        <DataTable\r\n          columns={this.columns}\r\n          // data={this.state.mockData}\r\n          data={this.state.data}\r\n          sortOrder={this.state.sortOrder} /* 表格排序顺序 */\r\n          onSort={this.handleSort} /* 排序回调 */\r\n        />\r\n        <Pager\r\n          total={total}\r\n          current={current}\r\n          perPageCountList={perPageCountList}\r\n          perPageCount={perPageCount}\r\n          onPageChange={this.handlePageChange}\r\n          onPerPageChange={this.handlePerPageChange}\r\n        />\r\n      </div>\r\n\r\n    )\r\n  }\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      sortOrder: 'desc',\r\n      filterProvince: 'yn',\r\n      data: [],\r\n      pageList: [],\r\n      perPageCountList: [20, 50, 100],\r\n      perPageCount: 20,\r\n      total: 1000,\r\n      current: 0,\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 分页方法\r\n   * */\r\n\r\n  handlePageChange = (val) => {\r\n    console.log(val)\r\n    let {perPageCount } = this.state\r\n    this.props.dispatch({\r\n      type: `${MODEL}/getViewEndTableData`,\r\n      current: val + 1,\r\n      perPageCount: perPageCount,\r\n      callback: (res) => {\r\n        this.setState({\r\n          data:res.data.data[0],\r\n          total: res.data.num_results,\r\n        })\r\n      }\r\n    })\r\n    this.setState({\r\n      current: val,\r\n    })\r\n\r\n  }\r\n  handlePerPageChange = (val) => {\r\n    this.props.dispatch({\r\n      type: `${MODEL}/getViewEndTableData`,\r\n      current: 1,\r\n      perPageCount: val,\r\n      callback: (res) => {\r\n\r\n      }\r\n    })\r\n    this.setState({\r\n      perPageCount: val,\r\n    })\r\n  }\r\n\r\n  getViewEndTableData = () => {\r\n    let { current, perPageCount } = this.state\r\n    this.props.dispatch({\r\n      type: `${MODEL}/getViewEndTableData`,\r\n      current: current + 1,\r\n      perPageCount: perPageCount,\r\n      callback: (res) => {\r\n          if (res.result) {\r\n            this.setState({\r\n              data:res.data.data[0],\r\n              total: res.data.num_results,\r\n            })\r\n          }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    let _this = this\r\n    _this.getViewEndTableData()\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  /* 排序方法 */\r\n  handleSort = (key, newOrder) => {\r\n    this.setState({sortOrder: newOrder, data: this.state.data.reverse()})\r\n  }\r\n\r\n  /* 匹配选中的关键字 */\r\n  // handleFilter = (value) => {\r\n  //   let _this = this\r\n  //   this.props.dispatch({\r\n  //     type: `${MODEL}/getViewEndTableData`,\r\n  //     callback: (res) => {\r\n  //       _this.setState({\r\n  //         data: value === null ? [...res.tableData] : res.tableData.filter(({orderStatusCode}) => {\r\n  //           return orderStatusCode == value\r\n  //         }),\r\n  //         filterProvince: value\r\n  //       })\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  /* 赋值，在表头添加其他内容 {viewResult_status[parseInt(record.status)]}*/\r\n  get columns() {\r\n    return columns.map((column, index) => {\r\n      if(column.key === operationAreaKey) {\r\n        return {\r\n          ...column,\r\n          render: this.renderOperationArea\r\n        }\r\n      }\r\n      if(column.key === 'task_type') {\r\n        return {\r\n          ...column,\r\n          render: (value, record) => {\r\n            return (\r\n              <div>\r\n                <span>{viewResult_task_type[record.task_type]}</span>\r\n              </div>\r\n            )\r\n          }\r\n        }\r\n      }\r\n      if(column.key === 'status') {\r\n        return {\r\n          ...column,\r\n          render: (value, record) => {\r\n            return (\r\n              <div>\r\n                <span>{viewResult_status[record.status]}</span>\r\n              </div>\r\n            )\r\n          }\r\n        }\r\n      }\r\n      if(column.key === 'create_time') {\r\n        return {\r\n          ...column,\r\n          render: (value, record) => {\r\n            return (\r\n              <div>\r\n                <span>{moment(record.create_time).startOf('second').format(`YYYY-MM-DD HH:mm:ss`)}</span>\r\n              </div>\r\n            )\r\n          }\r\n        }\r\n      }\r\n      if(column.key === 'modify_time') {\r\n        return {\r\n          ...column,\r\n          render: (value, record) => {\r\n            return (\r\n              <div>\r\n                <span>{moment(record.modify_time).startOf('second').format(`YYYY-MM-DD HH:mm:ss`)}</span>\r\n              </div>\r\n            )\r\n          }\r\n        }\r\n      }\r\n\r\n      return column\r\n    })\r\n  }\r\n\r\n  /* 操作 img_package_url 图片包 statis_package_url统计包*/\r\n  renderOperationArea = (value, record) => {\r\n    // console.log(value) // undefined\r\n    // console.log(record) // 每一项的数据\r\n    return (\r\n      <div>\r\n        <a href={record.statis_package_url} target=\"_blank\">下载统计数据</a>\r\n        <a href={record.img_package_url} target=\"_blank\">下载图片数据</a>\r\n      </div>\r\n    )\r\n  }\r\n  // downloadData = (value, record) => {\r\n  //   console.log(value)\r\n  //   console.log(record)\r\n  // }\r\n  /* filter列表 */\r\n  // renderNameFilterHeader = (col) => {\r\n  //   return (\r\n  //     <DataTable.FilterableColumnHeader\r\n  //       list={statusList}\r\n  //       value={this.state.filterProvince}\r\n  //       onFilter={this.handleFilter}\r\n  //     >\r\n  //       {col.title}\r\n  //     </DataTable.FilterableColumnHeader>\r\n  //   )\r\n  // }\r\n\r\n\r\n}\r\n\r\nconst connectProps = ({rejudge3}) => {\r\n  return {\r\n    // tableData: rejudge2.viewEnd.tableData\r\n  }\r\n}\r\n\r\nexport default connect(connectProps)(Table)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button, Checkbox, DateRangePicker, Input, Select, TabList, TopTips} from '@tencent/bere'\r\nimport Panel from '@layouts/PanelLayout.js'\r\n\r\nimport Table from './Table'\r\n\r\nimport rejudgeCfg from '@config/rejudge'\r\n\r\nconst MODEL = rejudgeCfg.MODEL;\r\n\r\nclass App extends React.Component{\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      navSelect: 0,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"main adc-manage-main\">\r\n          <div className='manage-area'>\r\n            <div className=\"top-title-box\">\r\n                <span className=\"title-text\">\r\n              {/*    <Link to=\"/rejudge/sampleSys\">*/}\r\n                     <a href=\"javascript: void(0);\" onClick={()=> window.history.back()}>{'<'} 返回</a>\r\n              {/*    </Link>*/}\r\n                  <label className=\"m10\"> | </label>\r\n                  <span>查看结果</span>\r\n                </span>\r\n            </div>\r\n            <div className=\"manage-area-main\">\r\n              <div className='manage-area-main-inner'>\r\n                <Panel>\r\n                  <Table>\r\n                  </Table>\r\n                </Panel>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = ({ rejudge_v3 }) => {\r\n  return {\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App)\r\n"],"sourceRoot":""}