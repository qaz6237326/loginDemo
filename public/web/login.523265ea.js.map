{"version":3,"sources":["webpack:///./modules/login/index.js","webpack:///./modules/login/containers/FormLogin.js","webpack:///./modules/login/containers/App.js"],"names":["_interopRequireDefault","__webpack_require__","App","_react","_reactRedux","_reactRouterDom","_bere","FormLogin","connect","_ref","login","isGroupLoading","testPwd","loginError","testUsername","loginSuccess","props","_this","_classCallCheck","this","_defineProperty","_assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","call","event","setState","user_name","target","value","pwd","_","preventDefault","state","dispatch","type","payload","rememberPwd","callback","history","replace","param","visible","checked","e","keyCode","submitLoginForm","default","createElement","Button","onClick","handleModal","localStorage","getItem","React","Component","_this2","divFormUnitStyle","zIndex","height","className","onKeyDown","handleKeyDown","style","htmlFor","placeholder","onChange","handleChangeUserName","handleChangePwd","handleRememberPwd","border-top","Dialog","title","okText","cancelText","onOk","onCancel","footerRender","handleFooterRender","shouldCloseOnOverlayClick","href","withRouter","_FormLogin"],"mappings":"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","file":"login.523265ea.js","sourcesContent":["import App from './containers/App'\r\nexport default App\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\nimport { Dialog, Button } from '@tencent/bere'\r\n\r\n@connect(({ login }) => ({\r\n    isGroupLoading: login.isGroupLoading,\r\n    testPwd: login.testPwd,\r\n    loginError: login.loginError,\r\n    testUsername: login.testUsername,\r\n    loginSuccess: login.loginSuccess\r\n}))\r\nclass FormLogin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user_name: localStorage.getItem(\"user_name\") || '',\r\n            pwd: localStorage.getItem(\"pwd\") || '',\r\n            // 校验用户名\r\n            testUsername: true,\r\n            // 校验密码\r\n            testPwd: true,\r\n            // 是否记住密码\r\n            rememberPwd: true,\r\n            // 是否显示弹出框\r\n            visible: false,\r\n            // 登录失败\r\n            loginError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n\r\n    // 获取用户输入的用户名\r\n    handleChangeUserName = (event) => {\r\n        // console.log(\"输出用户名\"+event.target.value);\r\n        this.setState({\r\n            user_name: event.target.value\r\n        });\r\n    }\r\n\r\n    // 获取用户输入的密码\r\n    handleChangePwd = (event) => {\r\n        // console.log(\"输出用户密码\"+event.target.value);\r\n        this.setState({\r\n            pwd: event.target.value\r\n        });\r\n    }\r\n\r\n    // 执行登录表单\r\n    submitLoginForm = (event) => {\r\n        let _ = this;\r\n        event.preventDefault();\r\n        if (this.state.user_name !== null && this.state.pwd !== null && this.state.pwd !== '' && this.state.user_name !== '') {\r\n            this.props.dispatch({\r\n                type: 'login/fetchLogin',\r\n                payload: {\r\n                    user_name: this.state.user_name,\r\n                    pwd: this.state.pwd,\r\n                    rememberPwd: this.state.rememberPwd\r\n                },\r\n                callback() {\r\n                    _.props.history.replace(\"/\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // 弹框结构快操作\r\n    handleModal = (param) => {\r\n        this.setState({\r\n            visible: param\r\n        });\r\n    }\r\n\r\n    // 是否记住密码\r\n    handleRememberPwd = (event) => {\r\n        this.setState({\r\n            rememberPwd: event.target.checked\r\n        });\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.keyCode === 13 && !this.props.isGroupLoading) {\r\n            this.submitLoginForm(e);\r\n        }\r\n    }\r\n\r\n    handleFooterRender = () => {\r\n        return (\r\n            <Button onClick={() => { this.handleModal(false) }}>确定</Button>\r\n        );\r\n    }\r\n    render() {\r\n        const divFormUnitStyle = {\r\n            zIndex: '2',\r\n            height: '60px'\r\n        };\r\n        const divFormCheckBoxStyle = {\r\n            height: '15px'\r\n        }\r\n        const aFocusStyle = {\r\n            color: '#006eff',\r\n            cursor: 'pointer',\r\n            ':focus': {\r\n                outLine: 'none !important'\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"login-wrapper\" onKeyDown={this.handleKeyDown}>\r\n                <div className=\"lg-header\">\r\n                    <div className=\"logo\"></div>\r\n                </div>\r\n                <div className=\"lg-content\">\r\n                    <div className=\"qc-pt-login-content\">\r\n                        <div className=\"login-tab\">\r\n                            <div className=\"p-logo\">\r\n                                欢迎使用腾讯寻踪智能缺陷检测平台\r\n                        </div>\r\n                            <div className=\"login-form\">\r\n                                <div className='form-unit' style={divFormUnitStyle}>\r\n                                    <label htmlFor=\"\">用户名</label>\r\n                                    <input type=\"text\" className=\"tc-15-input-text m\" placeholder=\"用户名\" value={this.state.user_name} onChange={this.handleChangeUserName} />\r\n                                </div>\r\n                                <div className={this.props.testPwd == false\r\n                                    ? \"form-unit is-error\"\r\n                                    : \"form-unit\"} style={divFormUnitStyle}>\r\n                                    <label htmlFor=\"\">密码</label>\r\n                                    <input type=\"password\" className=\"tc-15-input-text m\" placeholder=\"密码\" value={this.state.pwd} onChange={this.handleChangePwd} />\r\n                                    {\r\n                                        this.props.testPwd == false ? <p className=\"form-input-help\">账号或密码错误,&nbsp;请重新输入</p> : \"\"\r\n                                    }\r\n                                    {/* {\r\n                                    this.props.loginError == true ? <p className=\"form-input-help\">登录失败,&nbsp;请<a href=\"javascript:;\" onClick={() => { this.handleModal(true) }}>联系管理员</a></p>:\"\"\r\n                                } */}\r\n                                </div>\r\n                                <div className=\"form-unit\" style={divFormCheckBoxStyle}>\r\n                                    <label className=\"form-ctrl-label\">\r\n                                        <input type=\"checkbox\" className=\"tc-15-checkbox\" checked={this.state.rememberPwd} onChange={this.handleRememberPwd} />记住账户密码\r\n                            </label>\r\n                                </div>\r\n                                <div className=\"form-submit\">\r\n                                    {\r\n                                        this.props.isGroupLoading\r\n                                            ? <button className=\"tc-15-btn loading\"><i className=\"n-loading-icon\"></i></button>\r\n                                            : <input type=\"submit\" className=\"tc-15-btn\" value=\"登录\" onClick={this.submitLoginForm} />\r\n                                    }\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"login-tips\" style={{ 'border-top': 'none' }}>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <Dialog\r\n                        title=\"管理员信息\"\r\n                        visible={this.state.visible}\r\n                        okText=\"确认\"\r\n                        cancelText=\"取消\"\r\n                        onOk={() => { this.handleModal(false) }}\r\n                        onCancel={() => { this.handleModal(false) }}\r\n                        footerRender={this.handleFooterRender}\r\n                        shouldCloseOnOverlayClick={true}\r\n                    >\r\n                        <div className=\"tc-15-rich-dialog-bd\">\r\n                            <ul className=\"form-list\">\r\n                                <li className=\"pure-text-row\">\r\n                                    <div className=\"form-label required\"><label htmlFor=\"\">管理员</label></div>\r\n                                    <div className=\"form-input\">\r\n                                        <span className=\"text-overflow\">admin</span>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"pure-text-row\">\r\n                                    <div className=\"form-label required\"><label htmlFor=\"\">电话</label></div>\r\n                                    <div className=\"form-input\">\r\n                                        <span className=\"text-overflow\">138XX</span>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"pure-text-row\">\r\n                                    <div className=\"form-label\"><label htmlFor=\"\">单位</label></div>\r\n                                    <div className=\"form-input\">\r\n                                        <span className=\"text-overflow\">深圳</span>\r\n                                    </div>\r\n                                </li>\r\n                                <li className=\"pure-text-row\">\r\n                                    <div className=\"form-label\"><label htmlFor=\"\">部门</label></div>\r\n                                    <div className=\"form-input\">\r\n                                        <span className=\"text-overflow\">有关部门</span>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </Dialog>\r\n                </div>\r\n                <div className=\"lg-footer\">\r\n                    <div className=\"copyright\">\r\n                        <p className=\"tag-line\">\r\n                            Copyright©2013-2018 <a className=\"copyright-link\" href=\"https://cloud.tencent.com/\" target=\"_blank\">cloud.tencent.com</a>. All Rights Reserved. 腾讯云 版权所有\r\n                    </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(FormLogin)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport FormLogin from './FormLogin'\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <FormLogin />\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(function (state) { return state })(App)\r\n"],"sourceRoot":""}